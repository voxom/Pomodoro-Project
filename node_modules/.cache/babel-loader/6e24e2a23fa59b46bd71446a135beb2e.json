{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crhar\\\\Documents\\\\Thinkful\\\\Pomodoro-Project\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport { Player } from \"video-react\";\nimport ChangeDuration from \"./ChangeDuration\";\nimport PlayPauseButtons from \"./PlayPauseButtons\";\nimport DisplayDuration from \"./DisplayDuration\";\nimport sample from \"./sample.mp4\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [session, setSession] = useState({\n    label: \"\",\n    timeRemaining: \"\"\n  });\n  const initialActiveState = {\n    focusDuration: 25,\n    breakDuration: 5,\n    sessionActive: false\n  };\n  const [activeState, setActiveState] = useState({ ...initialActiveState\n  });\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          if (prevStateSession) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: activeState.focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n        setActiveState({ ...activeState,\n          sessionActive: true\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  function stop() {\n    setActiveState({ ...initialActiveState\n    });\n    setIsTimerRunning(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ChangeDuration, {\n    activeState: activeState,\n    setActiveState: setActiveState,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PlayPauseButtons, {\n    playPause: playPause,\n    stop: stop,\n    activeState: activeState,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DisplayDuration, {\n    activeState: activeState,\n    session: session,\n    setSession: setSession,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Player, {\n    src: sample,\n    muted: true,\n    playsInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/crhar/Documents/Thinkful/Pomodoro-Project/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","Player","ChangeDuration","PlayPauseButtons","DisplayDuration","sample","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","label","timeRemaining","initialActiveState","focusDuration","breakDuration","sessionActive","activeState","setActiveState","playPause","prevState","nextState","prevStateSession","stop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AAAEW,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,aAAa,EAAE;AAA5B,GAAD,CAAtC;AACA,QAAMC,kBAAkB,GAAG;AACzBC,IAAAA,aAAa,EAAE,EADU;AAEzBC,IAAAA,aAAa,EAAE,CAFU;AAGzBC,IAAAA,aAAa,EAAE;AAHU,GAA3B;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAE,GAAGa;AAAL,GAAD,CAA9C;AACA;AACF;AACA;;AACE,WAASM,SAAT,GAAqB;AACnBX,IAAAA,iBAAiB,CAAEY,SAAD,IAAe;AAC/B,YAAMC,SAAS,GAAG,CAACD,SAAnB;;AACA,UAAIC,SAAJ,EAAe;AACbX,QAAAA,UAAU,CAAEY,gBAAD,IAAsB;AAC/B,cAAIA,gBAAJ,EAAsB;AACpB,mBAAO;AACLX,cAAAA,KAAK,EAAE,UADF;AAELC,cAAAA,aAAa,EAAEK,WAAW,CAACH,aAAZ,GAA4B;AAFtC,aAAP;AAID;;AACD,iBAAOQ,gBAAP;AACD,SARS,CAAV;AASAJ,QAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkBD,UAAAA,aAAa,EAAE;AAAjC,SAAD,CAAd;AACD;;AACD,aAAOK,SAAP;AACD,KAfgB,CAAjB;AAgBD;;AAED,WAASE,IAAT,GAAgB;AACdL,IAAAA,cAAc,CAAC,EAAE,GAAGL;AAAL,KAAD,CAAd;AACAL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAES,WADf;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,cAAc,EAAEX,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAEY,SADb;AAEE,IAAA,IAAI,EAAEI,IAFR;AAGE,IAAA,WAAW,EAAEN,WAHf;AAIE,IAAA,cAAc,EAAEV,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAYE,oBAAC,eAAD;AACE,IAAA,WAAW,EAAEU,WADf;AAEE,IAAA,OAAO,EAAER,OAFX;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,cAAc,EAAEH,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAkBE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEF,MADP;AAEE,IAAA,KAAK,EAAE,IAFT;AAGE,IAAA,WAAW,EAAE,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AA4BD;;AAED,eAAeC,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Player } from \"video-react\";\nimport ChangeDuration from \"./ChangeDuration\";\nimport PlayPauseButtons from \"./PlayPauseButtons\";\nimport DisplayDuration from \"./DisplayDuration\";\nimport sample from \"./sample.mp4\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [session, setSession] = useState({ label: \"\", timeRemaining: \"\" });\n  const initialActiveState = {\n    focusDuration: 25,\n    breakDuration: 5,\n    sessionActive: false,\n  };\n  const [activeState, setActiveState] = useState({ ...initialActiveState });\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          if (prevStateSession) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: activeState.focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n        setActiveState({ ...activeState, sessionActive: true });\n      }\n      return nextState;\n    });\n  }\n\n  function stop() {\n    setActiveState({ ...initialActiveState });\n    setIsTimerRunning(false);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <ChangeDuration\n        activeState={activeState}\n        setActiveState={setActiveState}\n        isTimerRunning={isTimerRunning}\n      />\n      <PlayPauseButtons\n        playPause={playPause}\n        stop={stop}\n        activeState={activeState}\n        isTimerRunning={isTimerRunning}\n      />\n      <DisplayDuration\n        activeState={activeState}\n        session={session}\n        setSession={setSession}\n        isTimerRunning={isTimerRunning}\n      />\n      <Player \n        src={sample} \n        muted={true}\n        playsInline={true}\n      />\n \n    </div>\n\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}