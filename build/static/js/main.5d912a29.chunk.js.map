{"version":3,"sources":["pomodoro/sample.mp4","utils/duration/index.js","pomodoro/ChangeDuration.jsx","pomodoro/PlayPauseButtons.jsx","utils/class-names/index.js","pomodoro/DisplayDuration.jsx","utils/useInterval/index.js","pomodoro/Pomodoro.js","App.js","index.js"],"names":["module","exports","minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","ChangeDuration","activeState","setActiveState","isTimerRunning","focusDuration","breakDuration","className","data-testid","type","onClick","disabled","PlayPauseButtons","classNameToBoolean","playPause","stop","sessionActive","role","aria-label","title","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","nextTick","prevState","timeRemaining","max","DisplayDuration","session","setSession","label","progress","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","currentSession","nextSession","Fragment","givenSeconds","seconds","round","secondsToDuration","style","height","aria-valuemin","aria-valuemax","aria-valuenow","width","Pomodoro","useState","setIsTimerRunning","initialActiveState","nextState","prevStateSession","src","sample","muted","loop","autoPlay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d912a29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.a30a2978.mp4\";","/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from 'react'\r\nimport { minutesToDuration } from '../utils/duration'\r\n\r\nexport default function ChangeDuration({\r\n  activeState,\r\n  setActiveState,\r\n  isTimerRunning,\r\n}) {\r\n  let { focusDuration, breakDuration } = activeState\r\n  const addFocus = () => {\r\n    setActiveState({\r\n      ...activeState,\r\n      focusDuration:\r\n        focusDuration < 60\r\n          ? focusDuration + 5\r\n          : focusDuration,\r\n    })\r\n  }\r\n  const minusFocus = () => {\r\n    setActiveState({\r\n      ...activeState,\r\n      focusDuration:\r\n        focusDuration > 5\r\n          ? focusDuration - 5\r\n          : focusDuration,\r\n    })\r\n  }\r\n  function addBreak() {\r\n    setActiveState({\r\n      ...activeState,\r\n      breakDuration:\r\n        breakDuration < 15\r\n          ? breakDuration + 1\r\n          : breakDuration,\r\n    })\r\n  }\r\n  function minusBreak() {\r\n    setActiveState({\r\n      ...activeState,\r\n      breakDuration:\r\n        breakDuration > 1\r\n          ? breakDuration - 1\r\n          : breakDuration,\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div className=\"input-group input-group-lg mb-2\">\r\n          <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n            Focus Duration: {minutesToDuration(focusDuration)}\r\n          </span>\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"decrease-focus\"\r\n              onClick={minusFocus}\r\n              disabled={isTimerRunning}\r\n            >\r\n              <span className=\"oi oi-minus\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"increase-focus\"\r\n              onClick={addFocus}\r\n              disabled={isTimerRunning}\r\n            >\r\n              <span className=\"oi oi-plus\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"float-right\">\r\n          <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n              Break Duration: {minutesToDuration(breakDuration)}\r\n            </span>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-break\"\r\n                onClick={minusBreak}\r\n                disabled={isTimerRunning}\r\n              >\r\n                <span className=\"oi oi-minus\" />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-break\"\r\n                onClick={addBreak}\r\n                disabled={isTimerRunning}\r\n              >\r\n                <span className=\"oi oi-plus\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport classNames from '../utils/class-names'\r\n\r\nexport default function PlayPauseButtons({\r\n  playPause,\r\n  stop,\r\n  activeState,\r\n  isTimerRunning,\r\n})\r\n{\r\n  let { sessionActive } = activeState\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div\r\n          className=\"btn-group btn-group-lg mb-2\"\r\n          role=\"group\"\r\n          aria-label=\"Timer controls\"\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-testid=\"play-pause\"\r\n            title=\"Start or pause timer\"\r\n            onClick={playPause}\r\n          >\r\n            <span\r\n              className={classNames({\r\n                oi: true,\r\n                'oi-media-play': !isTimerRunning,\r\n                'oi-media-pause': isTimerRunning,\r\n              })}\r\n            />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"stop\"\r\n            title=\"Stop the session\"\r\n            onClick={stop}\r\n            disabled={!sessionActive}\r\n          >\r\n            <span className=\"oi oi-media-stop\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from 'react'\nimport { minutesToDuration, secondsToDuration } from '../utils/duration'\nimport useInterval from '../utils/useInterval'\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1)\n  return {\n    ...prevState,\n    timeRemaining,\n  }\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === 'Focusing') {\n      return {\n        label: 'On Break',\n        timeRemaining: breakDuration * 60,\n      }\n    }\n    return {\n      label: 'Focusing',\n      timeRemaining: focusDuration * 60,\n    }\n  }\n}\n\nexport default function DisplayDuration({\n  isTimerRunning,\n  activeState,\n  session,\n  setSession,\n}) {\n  let { focusDuration,\n        breakDuration,\n        sessionActive, } = activeState\n  let { label, timeRemaining } = session\n  const progress =\n    100 *\n    (1 -\n      timeRemaining /\n        (label === 'Focusing'\n          ? focusDuration * 60\n          : breakDuration * 60))\n  useInterval(\n    () => {\n      if (timeRemaining === 0) {\n        new Audio('https://bigsoundbank.com/UPLOAD/mp3/1111.mp3').play()\n        return setSession(\n          nextSession(focusDuration, breakDuration),\n        )\n      }\n      return setSession(nextTick)\n    },\n    isTimerRunning ? 1000 : null,\n  )\n  return (\n    <div>\n      {sessionActive && (\n        <React.Fragment>\n          <div className=\"row mb-2\">\n            <div className=\"col\">\n              <h2 data-testid=\"session-title\">\n                {label} for{' '}\n                {label === 'Focusing'\n                  ? minutesToDuration(focusDuration)\n                  : minutesToDuration(breakDuration)}{' '}\n                minutes\n              </h2>\n\n              <p className=\"lead\" data-testid=\"session-sub-title\">\n                {secondsToDuration(timeRemaining)} remaining\n              </p>\n              {!isTimerRunning && <h2>Paused</h2>}\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <div className=\"col\">\n              <div className=\"progress\" style={{ height: '20px' }}>\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  aria-valuenow={progress}\n                  style={{ width: `${progress}%` }}\n                />\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  )\n}","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useState } from \"react\";\nimport ChangeDuration from \"./ChangeDuration\";\nimport PlayPauseButtons from \"./PlayPauseButtons\";\nimport DisplayDuration from \"./DisplayDuration\";\nimport { Player } from \"video-react\";\nimport sample from \"./sample.mp4\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [session, setSession] = useState({ label: \"\", timeRemaining: \"\" });\n  const initialActiveState = {\n    focusDuration: 25,\n    breakDuration: 5,\n    sessionActive: false,\n  };\n  const [activeState, setActiveState] = useState({ ...initialActiveState });\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          if (prevStateSession) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: activeState.focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n        setActiveState({ ...activeState, sessionActive: true });\n      }\n      return nextState;\n    });\n  }\n\n  function stop() {\n    setActiveState({ ...initialActiveState });\n    setIsTimerRunning(false);\n  }\n\n  return (\n\n    <div className=\"pomodoro\">\n      <ChangeDuration\n        activeState={activeState}\n        setActiveState={setActiveState}\n        isTimerRunning={isTimerRunning}\n      />\n      <PlayPauseButtons\n        playPause={playPause}\n        stop={stop}\n        activeState={activeState}\n        isTimerRunning={isTimerRunning}\n      />\n      <DisplayDuration\n        activeState={activeState}\n        session={session}\n        setSession={setSession}\n        isTimerRunning={isTimerRunning}\n      />\n      <Player \n        src={sample}\n        muted\n        loop\n        autoPlay\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}